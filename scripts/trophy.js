// Variables

// Tableau des trophy
const allTrophyArray = [
    {trophyName:"ACTIVITES-20", imgRef : "./Badges/Badge-20-activite.webp", text : "A accomplit 20 activit√©s."},
    {trophyName:"ABSENT", imgRef : "./Badges/Badge-absent.webp", text : "Aucune activit√© depuis plus d'un mois !"},
    {trophyName:"MUSCU-10", imgRef : "./Badges/Badge-Muscu-10-seance.webp", text : "A pratiqu√© 10 s√©ances de musculation."},
    {trophyName:"CAP-10", imgRef : "./Badges/Badge-running-10km.webp", text : "A parcouru 10km en une s√©ance de course √† pied."},
    {trophyName:"CAP-SEMI", imgRef : "./Badges/Badge-running-semi.webp", text : "A r√©alis√© un semi-marathon."},
    {trophyName:"CAP-MARATHON", imgRef : "./Badges/Badge-marathon.webp", text : "√áa c'est fait !"},
    {trophyName:"1-AN", imgRef : "./Badges/Badge-1-an.webp", text : "Anniversaire de sportif !"},
    {trophyName:"TRIATHLON", imgRef : "./Badges/Badge-triathlon.webp", text : "Jamais deux sans trois !"}
];




// Simulation userTrophyArray

let userTrophyArray = [
    "ABSENT","ACTIVITES-20","MUSCU-10","1-AN","CAP-10","CAP-SEMI","CAP-MARATHON","TRIATHLON"
];





// Reference 
let imgTrophyFullScreenRef,
pTrophyFullScreenTextRef,
divTrophyListRef;





function onOpenMenuTrophy(){
    console.log("[TROPHY] Ouverture menu Trophy");

    // Reference les √©l√©ments
    imgTrophyFullScreenRef = document.getElementById("imgTrophyFullScreen");
    pTrophyFullScreenTextRef = document.getElementById("pTrophyFullScreenText");
    divTrophyListRef = document.getElementById("divTrophyList");


    // Prend les r√©compenses de l'utilisateur pour les afficher dans la liste
    onLoadUserTrophyList();
    


};



// Creation des r√©compenses de l'user dans la liste
function onLoadUserTrophyList() {

    divTrophyListRef.innerHTML = "";


    if (userTrophyArray.length === 0) {
        divTrophyListRef.innerHTML = "Poursuit tes efforts pour obtenir des r√©compenses ! ü•á ";
        return
    }



    console.log("[TROPHY] Cr√©ation de la liste des r√©compenses de l'utilsiateur");
    console.log(userTrophyArray);

    userTrophyArray.forEach(trophy=>{

        // Recup√®re les √©l√©ments dans le tableau de r√©f√©rence
        let trophyElement = onSearchTrophyInArray(trophy);


        // Cr√©ation des images
        let newImg = document.createElement("img");
        newImg.classList = "trophyList";
        newImg.src = trophyElement.imgRef;
        newImg.onclick = function (){
            onDisplayTrophyFullScreen(trophyElement.trophyName);
        };

        // Insertion
        divTrophyListRef.appendChild(newImg);


    });
};





// -----AFFICHAGE PLEIN ECRAN VISUALISATION-----






// Fonction de recup√©ration d'un trophy dans le tableau
function onSearchTrophyInArray(trophyTarget) {
    return allTrophyArray.find(trophy => trophy.trophyName === trophyTarget);
};


// Affiche en grand la r√©compense
function onDisplayTrophyFullScreen(trophyRef) {
    console.log("[TROPHY]  demande de visualisation de r√©compense : " + trophyRef);

    let currentTrophyData = onSearchTrophyInArray(trophyRef);


    console.log(currentTrophyData);

    // set les √©l√©ments et affiche
    imgTrophyFullScreenRef.src = currentTrophyData.imgRef;
    pTrophyFullScreenTextRef.innerHTML = currentTrophyData.text;

    document.getElementById("divFullScreenTrophy").classList.add("show");
};


// Masque la r√©compense qui √©tait en grand plan
function onHiddenFullscreenTrophy() {
    console.log("cache la div de visualisation de r√©compense");
    document.getElementById("divFullScreenTrophy").classList.remove("show");
};




   
   
   
   
   
   
   
   
   
   
//    Reset le menu des r√©compenses

function onResetTrophyMenu() {
    imgTrophyFullScreenRef= "";
    pTrophyFullScreenTextRef = "";
    divTrophyListRef = "";

    divTrophyListRef.innerHTML = "";
}
   
   
   
   
   // Retour depuis Trophy
function onClickReturnFromTrophy() {

    onResetTrophyMenu();
   
    // ferme le menu
    onLeaveMenu("Trophy");
}